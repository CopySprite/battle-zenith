// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Rocky_Divide":
            case "Grass_Stage2":return tiles.createTilemap(hex``, img`
222222222222222222222
2...................2
2...................2
2...222.......222...2
2..222.........222..2
2..22....222....22..2
2..22...22222...22..2
2..22...22222...22..2
2..22...22222...22..2
2..22...22222...22..2
2..22....222....22..2
2..222.........222..2
2...222.......222...2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile7,myTiles.tile5], TileScale.Sixteen);
            case "Tough_Tundra":
            case "Frosty Forest1":return tiles.createTilemap(hex`15001000020202020202020202020202020202020202020202020101010101010101010101010101010101010102020101010101010101010101010101010101010102020101010102020101010101010102020101010102020101010202010101020201010101020201010102020101010201010101010202010101010201010102020101010201010101010102010101010201010102020101020202020101010101010101010201010102020101010201010101010101010102020202010102020101010201010101020101010101010201010102020101010201010101020201010101010201010102020101010202010101010202010101020201010102020101010102020101010101010102020101010102020101010101010101010101010101010101010102020101010101010101010101010101010101010102020202020202020202020202020202020202020202`, img`
222222222222222222222
2...................2
2...................2
2....22.......22....2
2...22...22....22...2
2...2.....22....2...2
2...2......2....2...2
2..2222.........2...2
2...2.........2222..2
2...2....2......2...2
2...2....22.....2...2
2...22....22...22...2
2....22.......22....2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile16,myTiles.tile18], TileScale.Sixteen);
            case "Miner_Maze":
            case "Leafy_Duels1":return tiles.createTilemap(hex``, img`
222222222222222222222
2...222222..........2
2....2222...........2
2.....222...222.....2
2......2222222.....22
2........222......222
2..2.......2.....2222
2.2222..........22222
22222..........2222.2
2222.....2.......2..2
222......222........2
22.....2222222......2
2.....222...222.....2
2...........2222....2
2..........222222...2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile7,myTiles.tile5], TileScale.Sixteen);
            case "Rocky_Wrath":
            case "Rocky_Divide1":return tiles.createTilemap(hex``, img`
222222222222222222222
2...................2
2...................2
2......2.....2......2
2....222.....222....2
2...222.......222...2
2..22.....2.....22..2
2.........2.........2
2.......22222.......2
2..2......2......2..2
2..22.....2.....22..2
2...222.......222...2
2....222.....222....2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile7,myTiles.tile5], TileScale.Sixteen);
            case "Green_Greens":
            case "level1":return tiles.createTilemap(hex``, img`
222222222222222222222
2...................2
2...................2
2...................2
2....222.....222....2
2...222.......222...2
2...22....2....22...2
2........222........2
2........222........2
2...22....2....22...2
2...222.......222...2
2....222.....222....2
2...................2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Leafy_Duels":
            case "Grass_Stage3":return tiles.createTilemap(hex``, img`
222222222222222222222
2...................2
2...................2
2...2........2......2
2...2222222..2..2...2
2...2........2222...2
2...2........2......2
2...2..2..2..2......2
2......2..2..2..2...2
2......2........2...2
2...2222........2...2
2...2..2..2222222...2
2......2........2...2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Final_Forest":
            case "Division1":return tiles.createTilemap(hex``, img`
222222222222222222222
2.....222222222.....2
2.......22222.......2
2........222........2
22222...........22222
2...22.........22...2
2........222........2
222.....22222.....222
222.....22222.....222
2........222........2
2...22.........22...2
22222...........22222
2........222........2
2.......22222.......2
2.....222222222.....2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Lava_Lakes":
            case "Dry_Desert2":return tiles.createTilemap(hex``, img`
.......2222222.......
.........2222........
..........2..........
.....22..............
2....22..............
22.......2.........22
222......222.....2222
222....222222.....222
2222...222222...22222
22......2222....22222
22........2......2222
..............2....22
.............22......
........2............
.......2222..........
.......222222........
`, [myTiles.transparency16,myTiles.tile25,myTiles.tile26,myTiles.tile28], TileScale.Sixteen);
            case "Frosty Forest":
            case "Grass_Stage1":return tiles.createTilemap(hex``, img`
222222222222222222222
2...................2
2...................2
2...................2
2....2..22222..2....2
2...22.........22...2
2...2...........2...2
2.......22222.......2
2.......22222.......2
2...2...........2...2
2...22.........22...2
2....2..22222..2....2
2...................2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile13,myTiles.tile16], TileScale.Sixteen);
            case "Frosty_Fields":
            case "Frosty Forest2":return tiles.createTilemap(hex``, img`
2....................
2....................
....................2
.....................
.....22........2.....
.....2...............
............2........
............2........
...........22........
....2................
.....................
................2....
......22.............
....................2
....................2
2..................22
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile13], TileScale.Sixteen);
            case "Start_Stage":
            case "Snow_Stage1":return tiles.createTilemap(hex``, img`
222222222222222222222
2222222.22.22.2222222
22.22.2.......2.22.22
222.......2.......222
222.2..2.222.2..2.222
22...2.2222222.2...22
2..22222222...2222..2
22..222...2...222..22
22..222...2...222..22
2..2222...22222222..2
22...2.2222222.2...22
222.2..2.222.2..2.222
222.......2.......222
22.22.2.......2.22.22
2222222.22.22.2222222
222222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile15,myTiles.tile17,myTiles.tile4,myTiles.tile6], TileScale.Sixteen);
            case "Safe_Sands":
            case "Safe_Sands1":return tiles.createTilemap(hex``, img`
222222222222222222222
2...................2
2...................2
2.......2...........2
2.....2222..22......2
2.......2...2.......2
2.......2...2...2...2
2...22222...2...2...2
2...2...2..222222...2
2...2...2...2.......2
2.......2...2.......2
2......22..2222.....2
2...........2.......2
2...................2
2...................2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile11,myTiles.tile14,myTiles.tile19], TileScale.Sixteen);
            case "Costal_Showdown":
            case "Dry_Desert1":return tiles.createTilemap(hex``, img`
.......2222222.......
......222222222......
......222222222......
.......2.....2.......
2...................2
222......2........222
2222.............2222
22222...........22222
22222...........22222
2222.............2222
222........2......222
2...................2
.......2.....2.......
......222222222......
......222222222......
.......2222222.......
`, [myTiles.transparency16,myTiles.tile11,myTiles.tile21,myTiles.tile23,myTiles.tile22,myTiles.tile24,myTiles.tile19], TileScale.Sixteen);
            case "Dessert_Desert":
            case "Rock_Stage1":return tiles.createTilemap(hex``, img`
.....................
.....................
.....................
................2....
.....2...............
.....................
.....................
.....................
...........2.........
.....................
.....................
...2.................
.................2...
.....................
.....................
.....................
`, [myTiles.transparency16,myTiles.tile11,myTiles.tile19], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Rock":
            case "tile7":return tile7;
            case "Gravel":
            case "tile5":return tile5;
            case "Snow":
            case "tile16":return tile16;
            case "Desert_Rock":
            case "tile14":return tile14;
            case "Tile3":
            case "tile1":return tile1;
            case "DarkTile":
            case "tile15":return tile15;
            case "DarkTile0":
            case "tile17":return tile17;
            case "Ice_Rock":
            case "tile18":return tile18;
            case "Grass":
            case "tile2":return tile2;
            case "Water":
            case "tile9":return tile9;
            case "Water2":
            case "tile20":return tile20;
            case "transparency8":return transparency8;
            case "myTile2":
            case "tile27":return tile27;
            case "tile25":return tile25;
            case "Tree":
            case "tile3":return tile3;
            case "Lava1":
            case "tile26":return tile26;
            case "Lava2":
            case "tile28":return tile28;
            case "myTile0":
            case "tile30":return tile30;
            case "Sand":
            case "tile11":return tile11;
            case "Sand1":
            case "tile23":return tile23;
            case "Sand2":
            case "tile22":return tile22;
            case "Sand0":
            case "tile21":return tile21;
            case "Sand3":
            case "tile24":return tile24;
            case "Snowy_Grass":
            case "tile13":return tile13;
            case "Snowy_Tree":
            case "tile12":return tile12;
            case "Tile1":
            case "tile4":return tile4;
            case "Tile2":
            case "tile6":return tile6;
            case "Cactus":
            case "tile19":return tile19;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
